server:
  port: 9080
app:
  kafka:
    metadata-update-topic: metadata.update
    metadata-cleanup-topic: metadata.cleanup
    metadata-delete-topic: metadata.delete
    metadata-create-topic: metadata.create
    blob-delete-success-topic: blob.delete.success
    blob-delete-fail-topic: blob.delete.fail
    metadata-group: metadata-group
  delete:
    document-retention-days: 7
spring:
  #data source
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/metadataservice?createDatabaseIfNotExist=true&useUnicode=yes&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:123456}
  jpa:
#    show-sql: true
    hibernate:
      ddl-auto: update
    generate-ddl: false
    database-platform: org.hibernate.dialect.MySQL8Dialect
  kafka:
    producer:
      bootstrap-servers: localhost:9092,localhost:9093,localhost:9094
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      #0: khi để 0, service này gửi event lên kafka server, thì nó sẽ k quan tâm event có lưu THÀNH CÔNG vào kafka server hay k mà xác minh luôn đã gửi thành công
      #1: lưu thành công vào leader nhưng k đợi lưu vào follower, trường hợp vừa lưu vào leader thì leader sập sẽ bị mất event
      #-1: event phải lưu thành công vào leader và follower
      acks: -1
      retries: 1 # số lần gửi lại khi acks bị fail
    consumer:
      bootstrap-servers: localhost:9092,localhost:9093,localhost:9094
      group-id: metadata-group   # Tên nhóm consumer
      auto-offset-reset: earliest   # earliest = đọc từ đầu nếu chưa có offset, latest = đọc mới nhất
      enable-auto-commit: false     # false = tự xử lý commit offset
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      max-poll-records: 500         # Số lượng record tối đa mỗi lần poll
      properties:
        enable.idempotence: true # Tránh gửi trùng message khi retry
        max.in.flight.request.per.connection: 5 #số lượng request trên 1 connection <=5 mới chống gửi trùng
        spring.json.trusted.packages: "vn.thanh.metadataservice.dto"    # hoặc "*" (unsafe)
    listener:
      ack-mode: manual              # Nếu enable-auto-commit=false thì thường dùng manual
      concurrency: 3                # Số thread xử lý song song
