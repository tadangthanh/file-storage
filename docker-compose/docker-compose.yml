version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: keycloak
      MYSQL_USER: thanh
      MYSQL_PASSWORD: 123456
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    restart: unless-stopped
    environment:
      KC_DB: mysql
      KC_DB_URL_HOST: mysql
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: 123456
      KC_DB_PORT: 3306
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "9000:8080"
    depends_on:
      - mysql
  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000 # thoi gina kiem tra xem cac broker con song hay da chet
    ports:
      - 2181:2181
    restart: "on-failure"

  kafka-1:
    image: confluentinc/cp-kafka:6.2.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    restart: "on-failure"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 # ket noi voi zookeeper ben tren
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://localhost:9092 # dia chi public ra ben ngoai de cac service ket noi den, paintext la giao thuc de ket noi, o day la giao thuc k can ma hoa
      # nội bộ cluster (container ↔ container)
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT #giao thuc ket noi bao mat
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL #ten cua giao thuc
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 #à tham số cấu hình cho Kafka xác định số bản sao (replica) của topic nội bộ dùng để lưu trữ offsets của consumer group, 
  #Giải thích cụ thể:
  # Kafka dùng một topic đặc biệt tên __consumer_offsets để lưu vị trí (offset) mà mỗi consumer group đã đọc đến đâu trên từng  partition.
  # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR quyết định số lượng bản sao của topic này trong cluster Kafka.
  kafka-2:
    image: confluentinc/cp-kafka:6.2.1
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
    restart: "on-failure"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19093,EXTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-3:
    image: confluentinc/cp-kafka:6.2.1
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
    restart: "on-failure"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19094,EXTERNAL://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:19094,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
volumes:
  mysql_data:
